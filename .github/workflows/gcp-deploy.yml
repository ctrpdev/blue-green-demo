# .github/workflows/gcp-deploy.yml

name: Despliegue Azul-Verde en GCP

# 1. DISPARADOR: ¬øCu√°ndo se ejecuta esto?
# Se ejecuta cada vez que haces un 'push' a la rama 'main'.
on:
  push:
    branches:
      - main

# Variables de entorno para no repetir texto
env:
  GCP_PROJECT: 'eng-plasma-474018-m7'
  GCP_ZONE: 'us-central1-a'
  BACKEND_SERVICE: 'django-backend-service'

# 2. TRABAJO: ¬øQu√© tareas se van a realizar?
jobs:
  deploy-to-gcp:
    # El tipo de m√°quina virtual que usar√° GitHub para ejecutar las tareas
    runs-on: ubuntu-latest

    # 3. PASOS: La secuencia de acciones a ejecutar
    steps:
      # Paso 1: Descargar tu c√≥digo del repositorio a la m√°quina virtual de GitHub
      - name: Checkout del c√≥digo
        uses: actions/checkout@v4

      # Paso 2: Autenticarse con Google Cloud usando una clave secreta
      - name: Autenticarse en Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      # Paso 3: Configurar la herramienta 'gcloud' para poder usarla
      - name: Configurar gcloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      # Paso 4: ¬°La L√≥gica! Identificar cu√°l es la m√°quina 'verde' (staging)
      - name: Identificar m√°quinas de Producci√≥n (azul) y Staging (verde)
        id: identify_vms # Le damos un ID a este paso para usar sus resultados despu√©s
        run: |
          # Buscamos la VM con la etiqueta 'env=staging' y guardamos su nombre
          GREEN_VM=$(gcloud compute instances list --filter="labels.env=staging" --format="value(name)")
          # Buscamos la VM con la etiqueta 'env=prod' y guardamos su nombre
          BLUE_VM=$(gcloud compute instances list --filter="labels.env=prod" --format="value(name)")
          
          # 'echo' con '>> $GITHUB_OUTPUT' crea variables que los siguientes pasos pueden usar
          echo "green_vm_name=$GREEN_VM" >> $GITHUB_OUTPUT
          echo "blue_vm_name=$BLUE_VM" >> $GITHUB_OUTPUT
          
          echo "üîµ M√°quina de Producci√≥n actual: $BLUE_VM"
          echo "üü¢ M√°quina de Staging para desplegar: $GREEN_VM"

      # # Paso 5: Desplegar el nuevo c√≥digo en la m√°quina 'verde' (staging)
      # - name: Desplegar c√≥digo en la m√°quina Verde
      #   run: |
      #     gcloud compute ssh ${{ steps.identify_vms.outputs.green_vm_name }} \
      #       --zone=${{ env.GCP_ZONE }} \
      #       --command="cd /home/cristian/blue-green-demo && git pull origin main && docker compose up -d --build"
      
      # # Paso 5: Desplegar el nuevo c√≥digo en la m√°quina 'verde' (staging)
      # - name: Desplegar c√≥digo en la m√°quina Verde
      #   run: |
      #     gcloud compute ssh cristian@${{ steps.identify_vms.outputs.green_vm_name }} \
      #       --zone=${{ env.GCP_ZONE }} \
      #       --command="cd /home/cristian/blue-green-demo && git pull origin main && docker compose up -d --build"
      
      # Paso 5: Desplegar el nuevo c√≥digo en la m√°quina 'verde' (staging)
      - name: Desplegar c√≥digo en la m√°quina Verde
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GH_USER: ${{ github.repository_owner }}
        run: |
          gcloud compute ssh cristian@${{ steps.identify_vms.outputs.green_vm_name }} \
            --zone=${{ env.GCP_ZONE }} \
            --command="cd /home/cristian/blue-green-demo && git pull https://${GH_USER}:${GH_TOKEN}@github.com/${GH_USER}/blue-green-demo.git main && docker compose up -d --build"

      # Paso 6: Cambiar el tr√°fico del balanceador para que apunte a la m√°quina 'verde'
      - name: Redirigir tr√°fico a la nueva versi√≥n (Verde)
        run: |
          echo "üîÑ Cambiando el tr√°fico del balanceador a ${{ steps.identify_vms.outputs.green_vm_name }}..."
          gcloud compute backend-services add-backend ${{ env.BACKEND_SERVICE }} \
            --instance-group=django-${{ steps.identify_vms.outputs.green_vm_name }}-group \
            --instance-group-zone=${{ env.GCP_ZONE }} \
            --global
            
          gcloud compute backend-services remove-backend ${{ env.BACKEND_SERVICE }} \
            --instance-group=django-${{ steps.identify_vms.outputs.blue_vm_name }}-group \
            --instance-group-zone=${{ env.GCP_ZONE }} \
            --global

      # Paso 7: Actualizar las etiquetas. ¬°Esto es clave para el pr√≥ximo despliegue!
      - name: Actualizar etiquetas de las VMs
        run: |
          echo "üè∑Ô∏è Actualizando etiquetas..."
          # La m√°quina verde ahora es producci√≥n
          gcloud compute instances add-labels ${{ steps.identify_vms.outputs.green_vm_name }} --labels=env=prod --zone=${{ env.GCP_ZONE }}
          # La m√°quina azul ahora es staging
          gcloud compute instances add-labels ${{ steps.identify_vms.outputs.blue_vm_name }} --labels=env=staging --zone=${{ env.GCP_ZONE }}
          echo "‚úÖ ¬°Despliegue completado! ${{ steps.identify_vms.outputs.green_vm_name }} es la nueva m√°quina de producci√≥n."